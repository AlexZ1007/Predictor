{"remainingRequest":"C:\\Projects\\predictor\\node_modules\\babel-loader\\lib\\index.js!C:\\Projects\\predictor\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Projects\\predictor\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projects\\predictor\\src\\components\\BracketPredictor.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Projects\\predictor\\src\\components\\BracketPredictor.vue","mtime":1610318094549},{"path":"C:\\Projects\\predictor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\predictor\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Projects\\predictor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\predictor\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjdXJyZW50UGhhc2VOdW06IDEsCiAgICAgIHRvdGFsUGhhc2VzTnVtYmVyOiB0aGlzLiRwYXJlbnQudG90YWxQaGFzZXNOdW1iZXIsCiAgICAgIGJyYWNrZXQ6IHRoaXMuJHBhcmVudC5icmFja2V0CiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGlmICghdGhpcy5icmFja2V0WydwaGFzZScgKyAxXSkgewogICAgICB0aGlzLmJyYWNrZXQgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5icmFja2V0KTsKICAgICAgdGhpcy50b3RhbFBoYXNlc051bWJlciA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLnRvdGFsUGhhc2VzTnVtYmVyKTsKICAgICAgdGhpcy5jdXJyZW50UGhhc2VOdW0gPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5jdXJyZW50UGhhc2VOdW0pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIGZvciAodmFyIGkgPSAxOyBpIDwgdGhpcy5jdXJyZW50UGhhc2VOdW07IGkrKykgewogICAgICB0aGlzLnVubG9ja0lucHV0KGkpOwogICAgICB0aGlzLnJlY292ZXJQcm9ncmVzcyhpKTsKICAgIH0KCiAgICB0aGlzLnVubG9ja0lucHV0KHRoaXMuY3VycmVudFBoYXNlTnVtKTsKICAgIHRoaXMubWFrZURlc2lnblJlc3BvbnNpdmUoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG5leHRSb3VuZDogZnVuY3Rpb24gbmV4dFJvdW5kKHBoYXNlTnVtKSB7CiAgICAgIGlmICh0aGlzLmN1cnJlbnRQaGFzZU51bSAhPSBwaGFzZU51bSkgcmV0dXJuIDA7CgogICAgICBpZiAocGhhc2VOdW0gPT0gdGhpcy50b3RhbFBoYXNlc051bWJlcikgewogICAgICAgIHRoaXMuZmluYWwoKTsKICAgICAgICByZXR1cm4gMDsKICAgICAgfSAvLyBDaGVjayBpZiBpdCBpcyB0aGUgZmluYWwobGFzdCBnYW1lKQoKCiAgICAgICQoIi5jYXJkLWZvb3RlciIpLmh0bWwoIiIpOwogICAgICAkKCIuYWR2LSIgKyBwaGFzZU51bSArICIgc3BhbiIpLmh0bWwoIiIpOwogICAgICB2YXIgbmV4dFBoYXNlVGVhbUlkID0gMDsKICAgICAgdmFyIG5leHRQaGFzZSA9IHRoaXMuYnJhY2tldFsncGhhc2UnICsgKHBoYXNlTnVtICsgMSldOwogICAgICB2YXIgY3VycmVudFBoYXNlID0gdGhpcy5icmFja2V0WydwaGFzZScgKyBwaGFzZU51bV07CiAgICAgIHZhciBlcnJvciA9IGZhbHNlOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjdXJyZW50UGhhc2UubGVuZ3RoOyBpICs9IDIpIHsKICAgICAgICB2YXIgdGVhbTEgPSBjdXJyZW50UGhhc2VbaV07CiAgICAgICAgdmFyIHRlYW0yID0gY3VycmVudFBoYXNlW2kgKyAxXTsgLy8gVGVhbXMKCiAgICAgICAgdmFyIGlkID0gJyMnICsgcGhhc2VOdW0gKyAnJyArIE1hdGguY2VpbCgoaSArIDEpIC8gMik7CiAgICAgICAgdmFyIGlucHV0X3RlYW0xID0gJChpZCArICcgaW5wdXQ6ZXEoMCknKTsKICAgICAgICB2YXIgaW5wdXRfdGVhbTIgPSAkKGlkICsgJyBpbnB1dDplcSgxKScpOwogICAgICAgIHRlYW0xLmdvYWxzID0gaW5wdXRfdGVhbTEudmFsKCk7CiAgICAgICAgdGVhbTIuZ29hbHMgPSBpbnB1dF90ZWFtMi52YWwoKTsgLy8gR2V0IHRoZSBnb2FscyBmcm9tIGlucHV0CgogICAgICAgIHZhciB3aW5uZXIgPSB2b2lkIDA7IC8vQ2hlY2sgd2hpY2ggdGVhbSBwcm9ncmVzcyB0byBuZXh0IHJvdW5kCgogICAgICAgIGlmICh0ZWFtMi50ZWFtTmFtZSA9PSAnTi9BJyB8fCBwYXJzZUludCh0ZWFtMS5nb2FscykgPiBwYXJzZUludCh0ZWFtMi5nb2FscykpIHsKICAgICAgICAgIHdpbm5lciA9IHsKICAgICAgICAgICAgdGVhbU5hbWU6IHRlYW0xLnRlYW1OYW1lLAogICAgICAgICAgICBnb2FsczogMAogICAgICAgICAgfTsKICAgICAgICAgICQoaWQgKyAnIGxpOmVxKDApJykuYWRkQ2xhc3MoJ2JnLXdpbicpOwogICAgICAgICAgJChpZCArICcgbGk6ZXEoMSknKS5hZGRDbGFzcygnYmctbG9zZScpOyAvLyBTZXQgdGhlIGJnICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIH0gZWxzZSBpZiAodGVhbTEudGVhbU5hbWUgPT0gJ04vQScgfHwgcGFyc2VJbnQodGVhbTEuZ29hbHMpIDwgcGFyc2VJbnQodGVhbTIuZ29hbHMpKSB7CiAgICAgICAgICB3aW5uZXIgPSB7CiAgICAgICAgICAgIHRlYW1OYW1lOiB0ZWFtMi50ZWFtTmFtZSwKICAgICAgICAgICAgZ29hbHM6IDAKICAgICAgICAgIH07CiAgICAgICAgICAkKGlkICsgJyBsaTplcSgwKScpLmFkZENsYXNzKCdiZy1sb3NlJyk7CiAgICAgICAgICAkKGlkICsgJyBsaTplcSgxKScpLmFkZENsYXNzKCdiZy13aW4nKTsgLy8gU2V0IHRoZSBiZyAgICAgCiAgICAgICAgfSBlbHNlIGlmICh0ZWFtMS50ZWFtTmFtZSAhPSAnTi9BJyAmJiB0ZWFtMi50ZWFtTmFtZSAhPSAnTi9BJykgewogICAgICAgICAgJChpZCArICIgLmNhcmQtZm9vdGVyIikuaHRtbCgiPHNwYW4gY2xhc3M9J3RleHQtZGFuZ2VyIHRleHQtMTUnPkVycm9yISBTY29yZSBDQU4nVCBiZSBlcXVhbCE8L3NwYW4+Iik7IC8vIERpc3BsYXkgZXJyb3IgdG8gdGhlIGJveAoKICAgICAgICAgICQoJy5hZHYtJyArIHBoYXNlTnVtICsgJyBzcGFuJykuaHRtbCgiRXJyb3IhIEFsbCBtYXRjaGVzIG5lZWQgYSB3aW5uZXIhIFNjb3JlIENBTidUIGJlIGVxdWFsISIpOyAvL0Rpc3BsYXkgZXJyb3IgdW5kZXIgdGhlIHRvcCBidXR0b24KCiAgICAgICAgICBlcnJvciA9IHRydWU7CiAgICAgICAgfQoKICAgICAgICBuZXh0UGhhc2VbbmV4dFBoYXNlVGVhbUlkXSA9IHdpbm5lcjsKICAgICAgICBuZXh0UGhhc2VUZWFtSWQrKzsgLy8gRGlzYWJsZSB0aGUgaW5wdXRzCgogICAgICAgIGlmIChlcnJvcikgY29udGludWU7CiAgICAgICAgaW5wdXRfdGVhbTEucHJvcCgiZGlzYWJsZWQiLCB0cnVlKTsKICAgICAgICBpbnB1dF90ZWFtMi5wcm9wKCJkaXNhYmxlZCIsIHRydWUpOwogICAgICB9CgogICAgICBpZiAoZXJyb3IpIHJldHVybiAwOwogICAgICB0aGlzLmN1cnJlbnRQaGFzZU51bSArPSAxOwogICAgICBsb2NhbFN0b3JhZ2UuYnJhY2tldCA9IEpTT04uc3RyaW5naWZ5KHRoaXMuYnJhY2tldCk7IC8vIFN0b3JlIGJyYWNrZXQKCiAgICAgIGxvY2FsU3RvcmFnZS5jdXJyZW50UGhhc2VOdW0gPSBKU09OLnN0cmluZ2lmeSh0aGlzLmN1cnJlbnRQaGFzZU51bSk7IC8vIFN0b3JlIGJyYWNrZXQKCiAgICAgIHRoaXMudW5sb2NrSW5wdXQodGhpcy5jdXJyZW50UGhhc2VOdW0pOwogICAgfSwKICAgIHVubG9ja0lucHV0OiBmdW5jdGlvbiB1bmxvY2tJbnB1dChwaGFzZU51bSkgewogICAgICB2YXIgcGhhc2UgPSB0aGlzLmJyYWNrZXRbJ3BoYXNlJyArIHBoYXNlTnVtXTsKCiAgICAgIGZvciAodmFyIGkgPSAxOyBpIDw9IHBoYXNlLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIGVxID0gKGkgLSAxKSAlIDI7CiAgICAgICAgdmFyIGlkID0gJyMnICsgcGhhc2VOdW0gKyAnJyArIE1hdGguY2VpbChpIC8gMik7CiAgICAgICAgdmFyIHRlYW0gPSBwaGFzZVtpIC0gMV07CiAgICAgICAgJChpZCArICcgLmlucHV0LWdyb3VwLXRleHQ6ZXEoJyArIGVxICsgJyknKS5odG1sKHRlYW0udGVhbU5hbWUpOwogICAgICAgIGlmICh0ZWFtLnRlYW1OYW1lID09ICJOL0EiKSBjb250aW51ZTsKICAgICAgICAkKGlkICsgJyBpbnB1dDplcSgnICsgZXEgKyAnKScpLnJlbW92ZUF0dHIoJ2Rpc2FibGVkJyk7CiAgICAgIH0KCiAgICAgIGNvbnNvbGUubG9nKCJ1bmxvY2siKTsKICAgICAgJCgiI25leHQtYnRuIiArIHBoYXNlTnVtKS5yZW1vdmVBdHRyKCdoaWRkZW4nKTsKICAgIH0sCiAgICBmaW5hbDogZnVuY3Rpb24gZmluYWwoKSB7CiAgICAgIHZhciBwaGFzZU51bSA9IHRoaXMudG90YWxQaGFzZXNOdW1iZXI7CiAgICAgIHZhciBjdXJyZW50UGhhc2UgPSB0aGlzLmJyYWNrZXRbJ3BoYXNlJyArIHBoYXNlTnVtXTsKICAgICAgdmFyIGlkID0gJyMnICsgcGhhc2VOdW0gKyAnMSc7CiAgICAgICQoIi5jYXJkLWZvb3RlciIpLmh0bWwoIiIpOwogICAgICAkKCIuYWR2LSIgKyBwaGFzZU51bSArICIgc3BhbiIpLmh0bWwoIiIpOwogICAgICB2YXIgdGVhbTEgPSBjdXJyZW50UGhhc2VbMF07CiAgICAgIHZhciB0ZWFtMiA9IGN1cnJlbnRQaGFzZVsxXTsgLy8gVGVhbXMKCiAgICAgIHZhciBpbnB1dF90ZWFtMSA9ICQoaWQgKyAnIGlucHV0OmVxKDApJyk7CiAgICAgIHZhciBpbnB1dF90ZWFtMiA9ICQoaWQgKyAnIGlucHV0OmVxKDEpJyk7CiAgICAgIHRlYW0xLmdvYWxzID0gaW5wdXRfdGVhbTEudmFsKCk7CiAgICAgIHRlYW0yLmdvYWxzID0gaW5wdXRfdGVhbTIudmFsKCk7CiAgICAgIHZhciBlcnJvciA9IGZhbHNlOwoKICAgICAgaWYgKHRlYW0yLnRlYW1OYW1lID09ICdOL0EnIHx8IHBhcnNlSW50KHRlYW0xLmdvYWxzKSA+IHBhcnNlSW50KHRlYW0yLmdvYWxzKSkgewogICAgICAgICQoaWQgKyAnIGxpOmVxKDApJykuYWRkQ2xhc3MoJ2JnLXdpbicpOwogICAgICAgICQoaWQgKyAnIGxpOmVxKDEpJykuYWRkQ2xhc3MoJ2JnLWxvc2UnKTsgLy8gU2V0IHRoZSBiZyAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgfSBlbHNlIGlmICh0ZWFtMS50ZWFtTmFtZSA9PSAnTi9BJyB8fCBwYXJzZUludCh0ZWFtMS5nb2FscykgPCBwYXJzZUludCh0ZWFtMi5nb2FscykpIHsKICAgICAgICAkKGlkICsgJyBsaTplcSgwKScpLmFkZENsYXNzKCdiZy1sb3NlJyk7CiAgICAgICAgJChpZCArICcgbGk6ZXEoMSknKS5hZGRDbGFzcygnYmctd2luJyk7IC8vIFNldCB0aGUgYmcgICAgIAogICAgICB9IGVsc2UgaWYgKHRlYW0xLnRlYW1OYW1lICE9ICdOL0EnICYmIHRlYW0yLnRlYW1OYW1lICE9ICdOL0EnKSB7CiAgICAgICAgJChpZCArICIgLmNhcmQtZm9vdGVyIikuaHRtbCgiPHNwYW4gY2xhc3M9J3RleHQtZGFuZ2VyIHRleHQtMTUnPkVycm9yISBTY29yZSBDQU4nVCBiZSBlcXVhbCE8L3NwYW4+Iik7IC8vIERpc3BsYXkgZXJyb3IgdG8gdGhlIGJveAoKICAgICAgICAkKCcuYWR2LScgKyBwaGFzZU51bSArICcgc3BhbicpLmh0bWwoIkVycm9yISBBbGwgbWF0Y2hlcyBuZWVkIGEgd2lubmVyISBTY29yZSBDQU4nVCBiZSBlcXVhbCEiKTsgLy9EaXNwbGF5IGVycm9yIHVuZGVyIHRoZSB0b3AgYnV0dG9uCgogICAgICAgIGVycm9yID0gdHJ1ZTsKICAgICAgfQoKICAgICAgaWYgKGVycm9yKSByZXR1cm4gMDsKICAgICAgaW5wdXRfdGVhbTEucHJvcCgiZGlzYWJsZWQiLCB0cnVlKTsKICAgICAgaW5wdXRfdGVhbTIucHJvcCgiZGlzYWJsZWQiLCB0cnVlKTsKICAgIH0sCiAgICByZWNvdmVyUHJvZ3Jlc3M6IGZ1bmN0aW9uIHJlY292ZXJQcm9ncmVzcyhwaGFzZU51bSkgewogICAgICB2YXIgY3VycmVudFBoYXNlID0gdGhpcy5icmFja2V0WydwaGFzZScgKyBwaGFzZU51bV07CiAgICAgIGNvbnNvbGUubG9nKGN1cnJlbnRQaGFzZSk7CgogICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGN1cnJlbnRQaGFzZS5sZW5ndGg7IGogKz0gMikgewogICAgICAgIHZhciBpZCA9ICcjJyArIHBoYXNlTnVtICsgJycgKyBNYXRoLmNlaWwoKGogKyAxKSAvIDIpOwogICAgICAgICQoaWQgKyAiIGlucHV0OmVxKDApIikudmFsKGN1cnJlbnRQaGFzZVtqXS5nb2Fscyk7CiAgICAgICAgJChpZCArICIgaW5wdXQ6ZXEoMCkiKS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpOwogICAgICAgICQoaWQgKyAiIGlucHV0OmVxKDEpIikudmFsKGN1cnJlbnRQaGFzZVtqICsgMV0uZ29hbHMpOwogICAgICAgICQoaWQgKyAiIGlucHV0OmVxKDEpIikucHJvcCgnZGlzYWJsZWQnLCB0cnVlKTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["BracketPredictor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"container margin-top-10\">\r\n        <div class=\"row \">\r\n            <div class=\"col align-self-center\" v-for=\"i in totalPhasesNumber\" :key=\"i\">\r\n                <div id=\"advance-div\" :class=\"'adv-'+i+' margin-bottom-15'\">\r\n                    <router-link :id=\"'next-btn'+i\" class=\"btn btn-dark btn-color-pink btn-hover-aqua\" to=\"\" event=\"\" @click.native.prevent=\"nextRound(i)\" hidden>Next round</router-link><br> \r\n                    <span class=\"text-danger text-15\"></span>\r\n                </div>\r\n                \r\n                <div class=\"card border-2 margin-bottom-15 \" v-for=\"n in bracket['phase'+i].length/2\" :key=\"n\" :id=\"i.toString()+n.toString()\"> \r\n                    <ul class=\"list-group list-group-flush\">\r\n                        <li class=\"list-group-item\" v-for=\"j in 2\" :key=\"j\">\r\n                          <div class=\"input-group\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\">N/A</span>\r\n                            </div>\r\n                                <input type=\"number\" class=\"form-control place\" min=\"0\" placeholder=\"Goals\" disabled>\r\n                          </div>\r\n                        </li>\r\n                    </ul>\r\n                    <div class=\"card-footer\"></div>\r\n                </div>\r\n               \r\n            </div>\r\n        </div>  \r\n    </div>\r\n      \r\n</template>\r\n<script>\r\nimport $ from 'jquery'\r\nexport default {\r\n    data: function(){ \r\n        return {\r\n            currentPhaseNum: 1,\r\n            totalPhasesNumber: this.$parent.totalPhasesNumber,\r\n            bracket: this.$parent.bracket\r\n            } \r\n        },\r\n    created(){\r\n        if(!this.bracket['phase'+1]) {\r\n            this.bracket=JSON.parse(localStorage.bracket);\r\n            this.totalPhasesNumber=JSON.parse(localStorage.totalPhasesNumber);\r\n            this.currentPhaseNum=JSON.parse(localStorage.currentPhaseNum) \r\n        }\r\n    },\r\n    mounted: function(){\r\n        for(let i=1; i<this.currentPhaseNum; i++){\r\n                this.unlockInput(i);\r\n                this.recoverProgress(i);\r\n        }\r\n        this.unlockInput(this.currentPhaseNum);\r\n        this.makeDesignResponsive();\r\n    },\r\n    methods:{\r\n        nextRound(phaseNum){\r\n            if(this.currentPhaseNum!=phaseNum) return 0;\r\n            if(phaseNum==this.totalPhasesNumber){ this.final(); return 0;}   // Check if it is the final(last game)\r\n            \r\n            $(\".card-footer\").html(\"\");\r\n            $(\".adv-\"+phaseNum+\" span\").html(\"\");\r\n\r\n            let nextPhaseTeamId=0;\r\n            let nextPhase=this.bracket['phase'+(phaseNum+1)];\r\n            let currentPhase=this.bracket['phase'+phaseNum];\r\n\r\n            let error=false;\r\n\r\n            for(let i=0;i<currentPhase.length;i+=2){\r\n                let team1=currentPhase[i];\r\n                let team2=currentPhase[i+1];                // Teams\r\n                let id='#'+phaseNum+''+(Math.ceil((i+1)/2));\r\n               \r\n                let input_team1=$(id+' input:eq(0)')\r\n                let input_team2=$(id+' input:eq(1)')\r\n                team1.goals=input_team1.val();    \r\n                team2.goals=input_team2.val();     // Get the goals from input\r\n        \r\n                let winner;\r\n                //Check which team progress to next round\r\n                if(team2.teamName=='N/A' || parseInt(team1.goals)>parseInt(team2.goals)){ \r\n                    winner={teamName: team1.teamName, goals: 0};\r\n                    $(id+' li:eq(0)').addClass('bg-win');    \r\n                    $(id+' li:eq(1)').addClass('bg-lose');     // Set the bg                         \r\n                }\r\n                else if(team1.teamName=='N/A' || parseInt(team1.goals)<parseInt(team2.goals)){  \r\n                    winner={teamName: team2.teamName, goals: 0};\r\n                    $(id+' li:eq(0)').addClass('bg-lose');       \r\n                    $(id+' li:eq(1)').addClass('bg-win');     // Set the bg     \r\n                } else if(team1.teamName!='N/A' && team2.teamName!='N/A'){\r\n                    $(id+\" .card-footer\").html(\"<span class='text-danger text-15'>Error! Score CAN'T be equal!</span>\");// Display error to the box\r\n                    $('.adv-'+phaseNum+' span').html(\"Error! All matches need a winner! Score CAN'T be equal!\"); //Display error under the top button\r\n                    error=true;\r\n                } \r\n\r\n                nextPhase[nextPhaseTeamId]=winner;   \r\n                nextPhaseTeamId++;\r\n                \r\n                // Disable the inputs\r\n                if(error) continue;\r\n                \r\n                input_team1.prop( \"disabled\", true );\r\n                input_team2.prop( \"disabled\", true );\r\n            }\r\n            if(error) return 0;\r\n            this.currentPhaseNum+=1;\r\n            localStorage.bracket=JSON.stringify(this.bracket); // Store bracket\r\n            localStorage.currentPhaseNum=JSON.stringify(this.currentPhaseNum); // Store bracket\r\n            this.unlockInput(this.currentPhaseNum);\r\n        },\r\n        unlockInput(phaseNum){\r\n\r\n            const phase=this.bracket['phase'+phaseNum];\r\n            for(let i=1;i<=phase.length;i++){\r\n                let eq=(i-1)%2;\r\n                let id='#'+phaseNum+''+Math.ceil(i/2);\r\n                let team=phase[i-1];\r\n                $(id+' .input-group-text:eq('+eq+')').html(team.teamName);\r\n                if(team.teamName==\"N/A\") continue;\r\n                $(id+' input:eq('+eq+')').removeAttr('disabled');\r\n            }\r\n                        console.log(\"unlock\")\r\n            $(\"#next-btn\"+phaseNum).removeAttr('hidden');\r\n        },\r\n        final(){\r\n            let phaseNum=this.totalPhasesNumber;\r\n            let currentPhase=this.bracket['phase'+phaseNum];\r\n            let id='#'+phaseNum+'1';\r\n\r\n            $(\".card-footer\").html(\"\");\r\n            $(\".adv-\"+phaseNum+\" span\").html(\"\");\r\n            \r\n            let team1=currentPhase[0];\r\n            let team2=currentPhase[1];                // Teams\r\n\r\n            let input_team1=$(id+' input:eq(0)')\r\n            let input_team2=$(id+' input:eq(1)')\r\n            team1.goals=input_team1.val();    \r\n            team2.goals=input_team2.val(); \r\n\r\n            let error=false;\r\n\r\n            if(team2.teamName=='N/A' || parseInt(team1.goals)>parseInt(team2.goals)){ \r\n                $(id+' li:eq(0)').addClass('bg-win');    \r\n                $(id+' li:eq(1)').addClass('bg-lose');     // Set the bg                         \r\n            }\r\n            else if(team1.teamName=='N/A' || parseInt(team1.goals)<parseInt(team2.goals)){  \r\n                $(id+' li:eq(0)').addClass('bg-lose');       \r\n                $(id+' li:eq(1)').addClass('bg-win');     // Set the bg     \r\n            } else if(team1.teamName!='N/A' && team2.teamName!='N/A'){\r\n                $(id+\" .card-footer\").html(\"<span class='text-danger text-15'>Error! Score CAN'T be equal!</span>\");// Display error to the box\r\n                $('.adv-'+phaseNum+' span').html(\"Error! All matches need a winner! Score CAN'T be equal!\"); //Display error under the top button\r\n                error=true;\r\n            }\r\n\r\n            if(error) return 0;\r\n            input_team1.prop( \"disabled\", true );\r\n            input_team2.prop( \"disabled\", true );\r\n        },\r\n        recoverProgress(phaseNum){\r\n            let currentPhase=this.bracket['phase'+phaseNum];\r\n            console.log(currentPhase)\r\n            for(let j=0;j<currentPhase.length;j+=2){\r\n                let id='#'+phaseNum+''+Math.ceil((j+1)/2);\r\n                $(id+\" input:eq(0)\").val(currentPhase[j].goals); \r\n                $(id+\" input:eq(0)\").prop('disabled',true);\r\n                $(id+\" input:eq(1)\").val(currentPhase[j+1].goals);\r\n                $(id+\" input:eq(1)\").prop('disabled',true);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n</script>"],"sourceRoot":"src/components"}]}